[

    {
        "_comment": "DO NOT EDIT THIS FILE. THIS WAS AUTOMATICALLY GENERATED BY THE hjson_to_json.py SCRIPT. INSTEAD, EDIT THE osx-config.hjson FILE."
    },
    {
        "description": "Binaries installed to /usr/local/bin are preferred over those in /usr/bin (Note: If this check does not pass, other tests will fail)",
        "confidence": "required",
        "tests": [
            {
                "type": "exact match",
                "command": "bash ./scripts/check_usr_local_bin_pos.sh",
                "command_pass": 1,
                "command_fail": 0,
                "case_sensitive": false
            }
        ],
        "fix": {
            "command": "python ./scripts/set_path_precedence.py \"/usr/local/bin\" \"/usr/bin\"",
            "manual": "1. Bring the Terminal application to the foreground if it is not already. You should see the word \"Terminal\" in the top left corner of your screen.\n2. Select Terminal->Quit\n3. Re-open the Terminal application and run the tool again; this check should now pass."
        }
    },	
{
        "description": "The OSX application firewall is enabled (system-wide).",
        "confidence": "required",
        "reference": "https://github.com/drduh/OS-X-Security-and-Privacy-Guide",
        "tests": [
            {
                "type": "exact match",
                "command": "little_snitch_is_installed",
                "command_pass": 1,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "defaults -currentHost read /Library/Preferences/com.apple.alf globalstate",
                "command_pass": "1",
                "command_fail": "0",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults -currentHost write /Library/Preferences/com.apple.alf globalstate -bool true",
            "sudo_command": "sudo defaults -currentHost write /Library/Preferences/com.apple.alf globalstate -bool true"
        }
    },
    {
        "description": "The OSX application firewall is enabled (current user only).",
        "confidence": "required",
        "reference": "https://github.com/drduh/OS-X-Security-and-Privacy-Guide",
        "tests": [
            {
                "type": "exact match",
                "command": "little_snitch_is_installed",
                "command_pass": 1,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "defaults -currentHost read ~/Library/Preferences/com.apple.alf globalstate",
                "command_pass": "1",
                "command_fail": "0",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults -currentHost write ~/Library/Preferences/com.apple.alf globalstate -bool true",
            "sudo_command": "sudo defaults -currentHost write ~/Library/Preferences/com.apple.alf globalstate -bool true"
        }
    },
    {
        "description": "A password is required to wake the computer from sleep or screen saver (system-wide).",
        "confidence": "required",
        "reference": "https://github.com/SummitRoute/osxlockdown/blob/58697f5162fe9e43df7dc9b6b94ffa34b0e11d4f/commands.yaml",
        "tests": [
            {
                "type": "exact match",
                "command": "defaults read /Library/Preferences/com.apple.screensaver askForPassword",
                "command_pass": "1",
                "command_fail": "0",
                "case_sensitive": "false"
            },
            {
                "type": "exact match",
                "command": "sudo defaults read /Library/Preferences/com.apple.screensaver askForPassword",
                "command_pass": "1",
                "command_fail": "0",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults write /Library/Preferences/com.apple.screensaver askForPassword -bool true",
            "sudo_command": "sudo defaults write /Library/Preferences/com.apple.screensaver askForPassword -bool true"
        }
    },
    {
        "description": "A password is required to wake the computer from sleep or screen saver (current user only).",
        "confidence": "required",
        "reference": "https://github.com/SummitRoute/osxlockdown/blob/58697f5162fe9e43df7dc9b6b94ffa34b0e11d4f/commands.yaml",
        "tests": [
            {
                "type": "exact match",
                "command": "defaults read ~/Library/Preferences/com.apple.screensaver askForPassword",
                "command_pass": "1",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults write ~/Library/Preferences/com.apple.screensaver askForPassword -bool true"
        }
    },
    {
        "description": "Logging is enabled for the operating system.",
        "confidence": "required",
        "reference": "https://github.com/drduh/OS-X-Security-and-Privacy-Guide",
        "tests": [
            {
                "type": "exact match",
                "command": "defaults -currentHost read /Library/Preferences/com.apple.alf loggingenabled",
                "command_pass": "1",
                "command_fail": "0",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults -currentHost write /Library/Preferences/com.apple.alf loggingenabled -bool true",
            "sudo_command": "sudo defaults -currentHost write /Library/Preferences/com.apple.alf loggingenabled -bool true"
        }
    },
	{
        "description": "Captive portal for connecting to new networks is disabled to prevent MITM attacks.",
        "confidence": "required",
        "reference": "https://github.com/drduh/OS-X-Security-and-Privacy-Guide",
        "tests": [
            {
                "type": "exact match",
                "command": "defaults -currentHost read /Library/Preferences/SystemConfiguration/com.apple.captive.control Active",
                "command_pass": "0",
                "command_fail": "1",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults -currentHost write /Library/Preferences/SystemConfiguration/com.apple.captive.control Active -bool false",
            "sudo_command": "sudo defaults -currentHost write /Library/Preferences/SystemConfiguration/com.apple.captive.control Active -bool false"
        },
        "undo": "sudo defaults -currentHost write /Library/Preferences/SystemConfiguration/com.apple.captive.control Active -bool true"
    },
	{
        "description": "The infrared receiver is disabled.",
        "confidence": "required",
        "tests": [
            {
                "type": "exact match",
                "command": "defaults read /Library/Preferences/com.apple.driver.AppleIRController DeviceEnabled",
                "command_pass": "0",
                "command_fail": "1",
                "case_sensitive": "false"
            },
            {
                "type": "exact match",
                "command": "sudo defaults read /Library/Preferences/com.apple.driver.AppleIRController DeviceEnabled",
                "command_pass": "0",
                "command_fail": "1",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults write /Library/Preferences/com.apple.driver.AppleIRController DeviceEnabled -bool false",
            "sudo_command": "sudo defaults write /Library/Preferences/com.apple.driver.AppleIRController DeviceEnabled -bool false"
        },
        "undo": "defaults write /Library/Preferences/com.apple.driver.AppleIRController DeviceEnabled -bool true"
    },
	{
        "description": "Printer sharing is disabled.",
        "confidence": "required",
        "reference": "https://github.com/SummitRoute/osxlockdown/blob/58697f5162fe9e43df7dc9b6b94ffa34b0e11d4f/commands.yaml",
        "tests": [
            {
                "type": "exact match",
                "command": "if [ -n \"$(system_profiler SPPrintersDataType | grep Shared | grep Yes)\" ]; then echo 1; exit; fi; if [ -n \"$(system_profiler SPPrintersDataType | grep 'System Printer Sharing: Yes')\" ]; then echo 1; exit; fi; echo 0; exit",
                "command_pass": "0",
                "command_fail": "1",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "cupsctl --no-share-printers"
        }
    },
    {
        "description": "Remote login is disabled.",
        "confidence": "required",
        "tests": [
            {
                "type": "exact match",
                "command": "systemsetup -getremotelogin",
                "command_pass": "Remote Login: Off",
                "case_sensitive": "false"
            },
            {
                "type": "exact match",
                "command": "sudo systemsetup -getremotelogin",
                "command_pass": "Remote Login: Off",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "systemsetup -f -setremotelogin off",
            "sudo_command": "sudo systemsetup -f -setremotelogin off"
        },
        "undo": "sudo systemsetup -f -setremotelogin on"
    },
	{
        "description": "Internet Sharing is disabled on all network interfaces.",
        "confidence": "required",
        "reference": "https://github.com/SummitRoute/osxlockdown/blob/58697f5162fe9e43df7dc9b6b94ffa34b0e11d4f/commands.yaml",
        "tests": [
            {
                "type": "exact match",
                "command": "defaults read /Library/Preferences/SystemConfiguration/com.apple.nat NAT | grep -c 'Enabled = 1'",
                "command_pass": "0",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults write /Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict-add Enabled -bool false",
            "sudo_command": "sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict-add Enabled -bool false"
        }
    },
    {
        "description": "Wake on Network Access feature is disabled.",
        "confidence": "required",
        "tests": [
            {
                "type": "exact match",
                "command": "systemsetup getwakeonnetworkaccess",
                "command_pass": "Wake On Network Access: Off",
                "case_sensitive": "false"
            },
            {
                "type": "exact match",
                "command": "sudo systemsetup getwakeonnetworkaccess",
                "command_pass": "Wake On Network Access: Off",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "systemsetup -setwakeonnetworkaccess off",
            "sudo_command": "sudo systemsetup -setwakeonnetworkaccess off"
        },
        "undo": "sudo systemsetup -setwakeonnetworkaccess on"
    },
	{
        "description": "An administrator password is required to change system-wide preferences.",
        "confidence": "required",
        "reference": "https://github.com/SummitRoute/osxlockdown/blob/58697f5162fe9e43df7dc9b6b94ffa34b0e11d4f/commands.yaml",
        "tests": [
            {
                "type": "exact match",
                "command": "if [ -n \"$(security authorizationdb read system.preferences 2> /dev/null | grep -A1 shared | grep -E '(true|false)' | grep 'false')\" ]; then echo 0; else echo 1; fi",
                "command_pass": "0",
                "command_fail": "1",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "security authorizationdb read system.preferences > /tmp/system.preferences.plist &&/usr/libexec/PlistBuddy -c \"Set :shared false\" /tmp/system.preferences.plist && security authorizationdb write system.preferences < /tmp/system.preferences.plist"
        }
    },
	{
        "description": "The File Vault key is protected when going to standby mode.",
        "confidence": "experimental",
        "reference": "https://github.com/drduh/OS-X-Security-and-Privacy-Guide",
        "tests": [
            {
                "type": "exact match",
                "command": "bash ./scripts/DestroyFVKeyOnStandby_check.sh",
                "command_pass": "1",
                "command_fail": "0",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "pmset -a destroyfvkeyonstandby 1 ; pmset -a hibernatemode 25 ; pmset -a powernap 0 ; pmset -a standby 0 ; pmset -a standbydelay 0; pmset -a autopoweroff 0",
            "sudo_command": "sudo pmset -a destroyfvkeyonstandby 1 ; sudo pmset -a hibernatemode 25 ; sudo pmset -a powernap 0 ; sudo pmset -a standby 0 ; sudo pmset -a standbydelay 0; sudo pmset -a autopoweroff 0"
        }
    },
	{
        "description": "FileVault file system encryption is enabled.",
        "confidence": "required",
        "reference": "https://github.com/drduh/OS-X-Security-and-Privacy-Guide",
        "tests": [
            {
                "type": "regex match",
                "command": "fdesetup status -verbose",
                "command_pass": "^.*FileVault is On.*$",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "manual": "1. Open System Preferences.\n2. Select \"Security & Privacy\"\n3. Select \"FileVault\".\n4. Click the \"Turn On FileVault\" button and follow the instructions.\n5. Decline to use iCloud or other Apple accounts for login. Instead, allow it to generate an offline decryption key. Store your decryption key somewhere safe so that you can decrypt your hard drive if something breaks, but prevent your enemies from acquiring yoru decryption key."
        },
        "undo": ""
    },
    {
        "description": "FileVault file system encryption is enabled at the root directory.",
        "confidence": "required",
        "reference": "https://github.com/drduh/OS-X-Security-and-Privacy-Guide",
        "tests": [
            {
                "type": "regex match",
                "command": "fdesetup status -verbose",
                "command_pass": "^.*device path \\=\\s+.*$",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "manual": "Sorry, no instructions are currently available to remediate this issue."
        }
    },
	{
        "description": "The idle timer for screen saver activation is set to 10 minutes or less.",
        "confidence": "recommended",
        "reference": "https://github.com/SummitRoute/osxlockdown/blob/58697f5162fe9e43df7dc9b6b94ffa34b0e11d4f/commands.yaml",
        "tests": [
            {
                "type": "regex match",
                "command": "UUID=`ioreg -rd1 -c IOPlatformExpertDevice | grep \"IOPlatformUUID\" | sed -e 's/^.*\"\\(.*\\)\"$/\\1/'`; for i in $(find /Users -type d -maxdepth 1); do PREF=$i/Library/Preferences/ByHost/com.apple.screensaver.$UUID; if [ -e $PREF.plist ]; then TIMEOUT=$(defaults read $PREF.plist idleTime) && if [ $TIMEOUT -eq 0 ] || [ $TIMEOUT -gt 600 ]; then echo 1; fi; else echo 0; fi; done;",
                "command_pass": "^(0\n*)+$",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "UUID=`ioreg -rd1 -c IOPlatformExpertDevice | grep \"IOPlatformUUID\" | sed -e 's/^.*\"\\(.*\\)\"$/\\1/'`; for i in $(find /Users -type d -maxdepth 1); do PREF=$i/Library/Preferences/ByHost/com.apple.screensaver.$UUID; if [ -e $PREF.plist ]; then defaults -currentHost write $PREF.plist idleTime -int 600; fi; done"
        }
    },
	{
        "description": "System Integrity Protection (SIP) is enabled.",
        "confidence": "required",
        "reference": "https://github.com/drduh/OS-X-Security-and-Privacy-Guide#system-integrity-protection",
        "tests": [
            {
                "type": "exact match",
                "command": "is_el_capitan",
                "command_pass": 0,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "csrutil status",
                "command_pass": "System Integrity Protection status: enabled.",
                "case_sensitive": false
            }
        ],
        "fix": {
            "manual": "1. SIP should be enabled by default on your El Capitan machine. You must boot into \"Recovery OS\" in order to use the \"csrutil enable\" command. See: https://derflounder.wordpress.com/2015/10/01/system-integrity-protection-adding-another-layer-to-apples-security-model/"
        }
    },
	{
        "description": "Files downloaded in Safari are not automatically opened.",
        "confidence": "required",
        "tests": [
            {
                "type": "exact match",
                "command": "defaults -currentHost read ~/Library/Preferences/com.apple.Safari AutoOpenSafeDownloads",
                "command_pass": "0",
                "command_fail": "1",
                "case_sensitive": "false"
            }
        ],
        "fix": {
            "command": "defaults -currentHost write ~/Library/Preferences/com.apple.Safari AutoOpenSafeDownloads -bool false"
        }
    },
    {
        "description": "OSX/Keydnap malware is not present.",
        "confidence": "required",
        "reference": "http://www.welivesecurity.com/2016/08/30/osxkeydnap-spreads-via-signed-transmission-application/",
        "tests": [
            {
                "type": "exact match",
                "command": "if [ -e \"/Applications/Transmission.app/Contents/Resources/License.rtf\" ] ; then echo 1 ; else echo 0 ; fi",
                "command_fail": 1,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "if [ -e \"/Volumes/Transmission/Transmission.app/Contents/Resources/License.rtf\" ] ; then echo 1 ; else echo 0 ; fi",
                "command_fail": 1,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "if [ -e \"$HOME/Library/Application Support/com.apple.iCloud.sync.daemon/icloudsyncd\" ] ; then echo 1 ; else echo 0 ; fi",
                "command_fail": 1,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "if [ -e \"$HOME/Library/Application Support/com.apple.iCloud.sync.daemon/process.id\" ] ; then echo 1 ; else echo 0 ; fi",
                "command_fail": 1,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "if [ -e \"$HOME/Library/LaunchAgents/com.apple.iCloud.sync.daemon.plist\" ] ; then echo 1 ; else echo 0 ; fi",
                "command_fail": 1,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "if [ -e \"/Library/Application Support/com.apple.iCloud.sync.daemon/\" ] ; then echo 1 ; else echo 0 ; fi",
                "command_fail": 1,
                "case_sensitive": false
            },
            {
                "type": "exact match",
                "command": "if [ -e \"/Library/Application Support/com.apple.iCloud.sync.daemon/\" ] ; then echo 1 ; else echo 0 ; fi",
                "command_pass": 0,
                "command_fail": 1,
                "case_sensitive": false
            }
        ],
        "fix": {
            "manual": "1. One or more of the files associated with the OSX/Keydnap malware was found. Please report this to the authors of osx-config-check via GitHub (https://github.com/kristovatlas/osx-config-check) or Twitter (https://twitter.com/kristovatlas).\n2. Refer to this link: http://www.welivesecurity.com/2016/08/30/osxkeydnap-spreads-via-signed-transmission-application/"
        }
    }
]	